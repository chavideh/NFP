@page "/login"
@inject HttpClient Http
@inject ILocalStorageService LocalStorage
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthProvider
@using Blazored.LocalStorage

@using Microsoft.AspNetCore.Components.Authorization
@using MudBlazor
@using PCH.NFP.Shared.Models

@inject ISnackbar Snackbar

<MudPaper Class="pa-4 mx-auto mt-10" MaxWidth="400px" Elevation="10">
    <MudText Typo="Typo.h5" Align="Align.Center">ورود به سیستم</MudText>

    <MudTextField @bind-Value="loginModel.Username" Label="نام کاربری" Variant="Variant.Filled" />
    <MudTextField @bind-Value="loginModel.Password" Label="رمز عبور" Variant="Variant.Filled" InputType="InputType.Password" />

    <MudButton OnClick="HandleLogin" Color="Color.Primary" Variant="Variant.Filled" Class="mt-4" FullWidth="true">
        ورود
    </MudButton>

    <MudSnackbarProvider />
</MudPaper>

@code {
    private LoginDto loginModel = new();

    private async Task HandleLogin()
    {
        var response = await Http.PostAsJsonAsync("api/auth/login", loginModel);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<ApiResponse<JwtResponse>>();
    
            await LocalStorage.SetItemAsync("authToken", result.Data.Token);
            ((TokenAuthenticationStateProvider)AuthProvider).NotifyUserAuthentication(result.Data.Token);

            Navigation.NavigateTo("/product");
        }
        else
        {
          Snackbar.Add("ورود ناموفق. لطفاً اطلاعات را بررسی کنید.", Severity.Error);
        }
    }
}